{"version":3,"sources":["logo.svg","recipe.js","App.js","reportWebVitals.js","index.js","recipe.module.css"],"names":["Recipe","title","calories","image","ingredients","className","style","recipe","map","text","src","alt","App","useState","recipes","setRecipes","search","setSearch","query","setQuery","useEffect","getRecipes","a","fetch","response","json","data","hits","onSubmit","e","preventDefault","type","value","onChange","event","target","console","log","label","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"qPAAe,I,4BCqBAA,EAhBA,SAAC,GAA6C,IAA3CC,EAA0C,EAA1CA,MAAOC,EAAmC,EAAnCA,SAAUC,EAAyB,EAAzBA,MAAOC,EAAkB,EAAlBA,YACtC,OACI,sBAAKC,UAAWC,IAAMC,OAAtB,UACI,6BAAKN,IAEL,6BACKG,EAAYI,KAAI,SAAAJ,GAAW,OACxB,6BAAKA,EAAYK,YAGzB,4BAAIP,IACJ,qBAAKG,UAAWC,IAAMH,MAAOO,IAAKP,EAAOQ,IAAI,SC4C1CC,MAvDf,WAEE,IAFa,EAKiBC,mBAAS,IAL1B,mBAKNC,EALM,KAKGC,EALH,OAMeF,mBAAS,IANxB,mBAMNG,EANM,KAMEC,EANF,OAOaJ,mBAAS,WAPtB,mBAONK,EAPM,KAOCC,EAPD,KAWbC,qBAAU,WACRC,MACC,CAACH,IAEJ,IAAMG,EAAU,uCAAG,8BAAAC,EAAA,sEACMC,MAAM,mCAAD,OAAoCL,EAApC,mBAdf,WAce,oBAbd,qCAYG,cACXM,EADW,gBAEEA,EAASC,OAFX,OAEXC,EAFW,OAGjBX,EAAWW,EAAKC,MAHC,2CAAH,qDAoBhB,OACE,sBAAKtB,UAAU,MAAf,UACE,uBAAMuB,SAXQ,SAAAC,GAChBA,EAAEC,iBACFX,EAASH,GACTC,EAAU,KAQmBZ,UAAU,cAArC,UACE,uBAAOA,UAAU,aAAa0B,KAAK,OAAOC,MAAOhB,EAAQiB,SAjB1C,SAAAC,GACnBjB,EAAUiB,EAAMC,OAAOH,OACvBI,QAAQC,IAAIrB,MAgBR,wBAAQX,UAAU,gBAAgB0B,KAAK,SAAvC,uBAEF,qBAAK1B,UAAU,SAAf,SACGS,EAAQN,KAAI,SAAAD,GAAM,OACjB,cAAC,EAAD,CAEEN,MAAOM,EAAOA,OAAO+B,MAAOpC,SAAUK,EAAOA,OAAOL,SACpDC,MAAOI,EAAOA,OAAOJ,MACrBC,YAAaG,EAAOA,OAAOH,aAHtBG,EAAOA,OAAO+B,gBCrChBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K,kBCfAc,EAAOC,QAAU,CAAC,OAAS,uBAAuB,MAAQ,yB","file":"static/js/main.6d24ec53.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from \"react\";\nimport style from './recipe.module.css';\n\n\n\nconst Recipe = ({ title, calories, image, ingredients }) => {\n    return (\n        <div className={style.recipe}  >\n            <h1>{title}</h1>\n\n            <ol>\n                {ingredients.map(ingredients => (\n                    <li>{ingredients.text}</li>\n                ))}\n            </ol>\n            <p>{calories}</p>\n            <img className={style.image} src={image} alt=\"\" />\n        </div>\n    );\n}\n\nexport default Recipe;","import logo from './logo.svg';\nimport React, { useEffect, useState } from \"react\";\nimport './App.css';\nimport Recipe from './recipe';\n\nfunction App() {\n\n  const APP_ID = 'a276c4de';\n  const APP_KEY = 'db91460df83bd656bf4144103172b55a';\n\n  const [recipes, setRecipes] = useState([]);\n  const [search, setSearch] = useState('');\n  const [query, setQuery] = useState('chicken');\n\n\n\n  useEffect(() => {\n    getRecipes();\n  }, [query]);\n\n  const getRecipes = async () => {\n    const response = await fetch(`https://api.edamam.com/search?q=${query}&app_id=${APP_ID}&app_key=${APP_KEY}`);\n    const data = await response.json();\n    setRecipes(data.hits);\n  };\n\n  const updateSearch = event => {\n    setSearch(event.target.value);\n    console.log(search);\n  }\n\n  const getSearch = e => {\n    e.preventDefault();\n    setQuery(search);\n    setSearch('');\n  }\n\n\n\n\n  return (\n    <div className=\"App\">\n      <form onSubmit={getSearch} className=\"search-form\">\n        <input className=\"search-bar\" type=\"text\" value={search} onChange={updateSearch}></input>\n        <button className=\"search-button\" type=\"submit\">Search</button>\n      </form>\n      <div className=\"recipe\">\n        {recipes.map(recipe => (\n          <Recipe\n            key={recipe.recipe.label}\n            title={recipe.recipe.label} calories={recipe.recipe.calories}\n            image={recipe.recipe.image}\n            ingredients={recipe.recipe.ingredients}\n          />\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"recipe\":\"recipe_recipe__BdaUe\",\"image\":\"recipe_image__BtdIE\"};"],"sourceRoot":""}